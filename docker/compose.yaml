services:

  pyicub:
    image: ${PROJECT_DOCKER_NAME:?err}.local
    gpus: all
    #extends:
    #  file: .dockyman/profiles/local.yaml
    #  service: local

    command: ["/bin/bash", "-c", "terminator & bash /var/scripts/initContainer.sh"]
    
    env_file:
      - .env

    environment:
      - DISPLAY=${DISPLAY:?err}
      - PULSE_SERVER=unix:${XDG_RUNTIME_DIR:?err}/pulse/native
      - PULSE_COOKIE=/run/pulse/cookie
      - XDG_RUNTIME_DIR=${XDG_RUNTIME_DIR:?err}
      - XDG_DATA_DIRS=${XDG_DATA_DIRS:?err}
      - QT_X11_NO_MITSHM=1
      - NO_AT_BRIDGE=1
      - LIBGL_ALWAYS_SOFTWARE=false
    working_dir: /workdir
    privileged: true
    stdin_open: true
    tty: true
    network_mode: host
    volumes:
      - type: bind
        source: /tmp/.X11-unix
        target: /tmp/.X11-unix
      - type: bind
        source: ${HOME}/.config/pulse/cookie
        target: /run/pulse/cookie
      - type: bind
        source: ${XDG_RUNTIME_DIR:?err}/pulse
        target: ${XDG_RUNTIME_DIR:?err}/pulse
      - type: bind
        source: ${XDG_RUNTIME_DIR:?err}/dconf
        target: ${XDG_RUNTIME_DIR:?err}/dconf
      - type: bind
        source: ./scripts
        target: /var/scripts
      - type: bind
        source: ./workdir
        target: /workdir

    profiles: ["backend"]
  
  pyicub-frontend:
    image: ${PYICUB_FRONTEND_BASE_NAME}

    env_file:
      - .env

    profiles: ["frontend"]

    network_mode: host

    depends_on:
      - pyicub

  
  pyicub-test:

    image: ${PROJECT_DOCKER_NAME:?err}.local
    gpus: all
    #extends:
    #  file: .dockyman/profiles/local.yaml
    #  service: local
    
    env_file:
      - .env

    profiles: ["test"]

    volumes:
      #- type: bind
      #  source: ./scripts
      #  target: /var/dockyman/scripts

      - type: bind
        source: ./workdir
        target: /workdir

    command: ["/bin/bash", "-c", "bash /var/dockyman/scripts/runTests.sh"]
