services:

  robotology:
    build:
      context: ./robotology
      dockerfile: Dockerfile
    image: robot-base:latest
    profiles: ["robotology"]
    pull_policy: never # i don't want to pull the image remotely as it is build locally

  pyicub:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        DOCKER_SRC: robotology-superbuild:latest  
    image: robot-gazebo:latest
    depends_on:
      - robotology
    gpus: all
    command: ["/bin/bash", "-c", "terminator & bash /var/scripts/initContainer.sh"]
    env_file:
      - .env
    environment:
      - DOCKER_SRC=${PROJECT_DOCKER_SRC}
      - PYICUB_VERSION=${PYICUB_VERSION}
      - PYICUB_URL=${PYICUB_URL}
      - PYICUB_BRANCH=${PYICUB_BRANCH}
      - DISPLAY=${DISPLAY:?err}
      - PULSE_SERVER=unix:${XDG_RUNTIME_DIR:?err}/pulse/native
      - PULSE_COOKIE=/run/pulse/cookie
      - XDG_RUNTIME_DIR=${XDG_RUNTIME_DIR:?err}
      - XDG_DATA_DIRS=${XDG_DATA_DIRS:?err}
      - QT_X11_NO_MITSHM=1
      - NO_AT_BRIDGE=1
      - LIBGL_ALWAYS_SOFTWARE=false
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
    working_dir: /workdir
    privileged: true
    stdin_open: true
    tty: true
    network_mode: host
    volumes:
      - type: bind
        source: /tmp/.X11-unix
        target: /tmp/.X11-unix
      - type: bind
        source: ${HOME}/.config/pulse/cookie
        target: /run/pulse/cookie
      - type: bind
        source: ${XDG_RUNTIME_DIR:?err}/pulse
        target: ${XDG_RUNTIME_DIR:?err}/pulse
      - type: bind
        source: ${XDG_RUNTIME_DIR:?err}/dconf
        target: ${XDG_RUNTIME_DIR:?err}/dconf
      - type: bind
        source: ./scripts
        target: /var/scripts
      - type: bind
        source: ./workdir
        target: /workdir
    profiles: ["backend"]

  pyicub-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: ${PYICUB_FRONTEND_BASE_NAME}
    env_file:
      - .env
    environment:
      - PYICUB_FRONTEND_VERSION=${PYICUB_FRONTEND_VERSION}
      - PYICUB_API_FRONTEND_PORT=${PYICUB_API_FRONTEND_PORT}
    network_mode: host
    depends_on:
      - pyicub
    profiles: ["frontend"]

  pyicub-test:
    image: robot-gazebo:latest
    gpus: all
    command: ["/bin/bash", "-c", "bash /var/scripts/runTests.sh"]
    env_file:
      - .env
    environment:
      - DISPLAY=${DISPLAY:?err}
      - PULSE_SERVER=unix:${XDG_RUNTIME_DIR:?err}/pulse/native
      - PULSE_COOKIE=/run/pulse/cookie
      - XDG_RUNTIME_DIR=${XDG_RUNTIME_DIR:?err}
      - XDG_DATA_DIRS=${XDG_DATA_DIRS:?err}
      - QT_X11_NO_MITSHM=1
      - NO_AT_BRIDGE=1
      - LIBGL_ALWAYS_SOFTWARE=false
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
    working_dir: /workdir
    privileged: true
    stdin_open: true
    tty: true
    network_mode: host
    volumes:
      - type: bind
        source: /tmp/.X11-unix
        target: /tmp/.X11-unix
      - type: bind
        source: ${HOME}/.config/pulse/cookie
        target: /run/pulse/cookie
      - type: bind
        source: ${XDG_RUNTIME_DIR:?err}/pulse
        target: ${XDG_RUNTIME_DIR:?err}/pulse
      - type: bind
        source: ${XDG_RUNTIME_DIR:?err}/dconf
        target: ${XDG_RUNTIME_DIR:?err}/dconf
      - type: bind
        source: ./scripts
        target: /var/scripts
      - type: bind
        source: ./workdir
        target: /workdir
    profiles: ["test"]

