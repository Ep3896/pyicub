
#!/bin/bash
set -e

# Ensure XDG_RUNTIME_DIR is set
if [ -z "$XDG_RUNTIME_DIR" ]; then
  export XDG_RUNTIME_DIR="/tmp/runtime-root"
  mkdir -p $XDG_RUNTIME_DIR/pulse
  mkdir -p $XDG_RUNTIME_DIR/dconf
fi

# Ensure DISPLAY is set
if [ -z "$DISPLAY" ]; then
  export DISPLAY=:0
fi

# Ensure XDG_DATA_DIRS is set
if [ -z "$XDG_DATA_DIRS" ]; then
  export XDG_DATA_DIRS="/usr/local/share:/usr/share:/var/lib/snapd/desktop"
fi

# 1. Clean state (remove only containers, not volumes)
echo "Bringing down any running containers (preserving volumes)..."
docker compose -f compose.base.yaml down --remove-orphans || true
docker compose -f compose.local.yaml down --remove-orphans || true
docker compose -f compose.yaml down --remove-orphans || true

# 2. Update .env with current UID/GID
echo "Updating UID/GID in .env file..."
sed -i '/^LOCAL_USER_UID=/d' .env 2>/dev/null || true
sed -i '/^LOCAL_USER_GID=/d' .env 2>/dev/null || true
echo "LOCAL_USER_UID=$(id -u)" >> .env
echo "LOCAL_USER_GID=$(id -g)" >> .env

# 3. Build (in the same order as your commands_docker.txt)
echo "Building base images..."
docker compose -f compose.base.yaml build

echo "Building local images..."
docker compose -f compose.local.yaml build

# 4. Start up
echo "Starting up the stack using compose.yaml..."
docker compose -f compose.yaml up
